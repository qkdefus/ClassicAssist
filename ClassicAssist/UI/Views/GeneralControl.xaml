<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:r="clr-namespace:ClassicAssist.Resources"
    xmlns:viewModels="clr-namespace:ClassicAssist.UI.ViewModels"
    xmlns:misc="clr-namespace:ClassicAssist.Misc"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:misc1="clr-namespace:ClassicAssist.UI.Misc"
    xmlns:data="clr-namespace:ClassicAssist.Data"
    xmlns:ValueConverters="clr-namespace:ClassicAssist.UI.Misc.ValueConverters"
    x:Name="userControl"
    x:Class="ClassicAssist.UI.Views.GeneralControl"
    mc:Ignorable="d"
    d:DesignHeight="300" d:DesignWidth="500">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Resources/Icons.xaml" />
                <ResourceDictionary Source="../../Resources/ResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <ValueConverters:ValueConverterGroup x:Key="InvertAndVisibilitate">
                <ValueConverters:InverseBooleanConverter />
                <BooleanToVisibilityConverter />
            </ValueConverters:ValueConverterGroup>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.DataContext>
        <viewModels:GeneralControlViewModel />
    </UserControl.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="175" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="1" Margin="10,16,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="26*" />
                <RowDefinition Height="5*"/>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Grid.RowSpan="2" Margin="7,0,0,0">
                <CheckBox Content="{x:Static r:Strings.Always_On_Top}" IsChecked="{Binding Options.AlwaysOnTop}" />
                <StackPanel Orientation="Horizontal">
                    <StackPanel.Resources>
                        <misc:BindingProxy x:Key="proxy" Data="{Binding}" />
                    </StackPanel.Resources>
                    <CheckBox IsChecked="{Binding Options.ActionDelay}" DataContext="{Binding}">
                        <CheckBox.ContentTemplate>
                            <ItemContainerTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="{x:Static r:Strings.Action_Delay_}" Margin="0" />
                                    <TextBox Width="40" Margin="10,0,10,0"
                                             Text="{Binding Data.Options.ActionDelayMS, Source={StaticResource proxy}}" />
                                    <Label Content="ms" Margin="0" Padding="0" />
                                </StackPanel>
                            </ItemContainerTemplate>
                        </CheckBox.ContentTemplate>
                    </CheckBox>
                </StackPanel>
            </StackPanel>
            <Grid Grid.Row="2">
                <GroupBox Header="{x:Static r:Strings.Saved_Passwords_}" Margin="5" Padding="5">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <CheckBox Content="{x:Static r:Strings.Enabled}" Grid.Column="0"
                                      IsChecked="{Binding SavePasswords}" />
                            <ComboBox x:Name="comboBox" Grid.Column="1" Margin="10,0,10,0" SelectedIndex="0"
                                      ItemsSource="{Binding SavedPasswords}" DisplayMemberPath="Key" />
                            <Button Content="{x:Static r:Strings.Remove}" Grid.Column="2"
                                    Command="{Binding RemoveSavedPasswordCommand}"
                                    CommandParameter="{Binding SelectedItem, ElementName=comboBox}" />
                        </Grid>
                        <CheckBox Content="{x:Static r:Strings.Only_overwrite_blank_password}"
                                  IsChecked="{Binding SavePasswordsOnlyBlank}" />
                    </StackPanel>
                </GroupBox>
            </Grid>
            <Grid Grid.Row="3">
                <GroupBox Header="{x:Static r:Strings.Profiles}" Margin="5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Margin="5">
                            <ComboBox ItemsSource="{Binding Profiles}" SelectedItem="{Binding SelectedProfile}">
                                <i:Interaction.Behaviors>
                                    <misc1:ComboBoxBehavior CommandBinding="{Binding ChangeProfileCommand}"
                                                            OnlyUserTriggered="True" />
                                </i:Interaction.Behaviors>
                            </ComboBox>
                        </Grid>
                        <DockPanel Grid.Column="1" Margin="5">
                            <Button Content="{x:Static r:Strings.New}" Margin="0,0,10,0" Padding="10,0,10,0"
                                    Command="{Binding NewProfileCommand}" />
                            <Button Content="{x:Static r:Strings.Save}" Margin="0,0,10,0" Padding="10,0,10,0"
                                    Command="{Binding SaveProfileCommand}" />
                            <Button Command="{Binding LinkUnlinkProfileCommand}">
                                <Image Width="16" Margin="3,0,3,0">
                                    <Image.Style>
                                        <Style TargetType="{x:Type Image}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsLinkedProfile}" Value="False">
                                                    <Setter Property="Source" Value="{StaticResource unlinkedIcon}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsLinkedProfile}" Value="True">
                                                    <Setter Property="Source" Value="{StaticResource linkedIcon}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                        </DockPanel>
                    </Grid>
                </GroupBox>
            </Grid>
        </Grid>
        <GridSplitter HorizontalAlignment="Left" Width="5" Grid.Column="1" Margin="4,5,0,5"/>
        <TabControl Margin="4,10,1,5" BorderBrush="#FF444444" BorderThickness="0" MinWidth="100">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Border x:Name="Border" BorderThickness="0,0,0,0" BorderBrush="Gainsboro" CornerRadius="0,0,0,0" Margin="0,0">
                                    <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="#FF474747" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="#FF616161" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>


            <TabItem x:Name="Tab1" Header="Filter" DockPanel.Dock="Left" Background="{DynamicResource ButtonBorderBrush}" OpacityMask="{DynamicResource BackgroundColor6Brush}" Foreground="#FFCCCCCC" Margin="0,0,-35,0" UseLayoutRounding="False" RenderTransformOrigin="1,0.5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100*" MinWidth="99"/>
                    </Grid.ColumnDefinitions>
                    <ListBox x:Name="listBox" ItemsSource="{Binding Filters}" Height="Auto" Width="Auto" MinWidth="99">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox IsChecked="{Binding Enabled}" />
                                    <TextBlock Text="{Binding Name}" Margin="5,0,5,0" />
                                    <Button Background="Transparent" BorderThickness="0"
                                ToolTip="{x:Static r:Strings.Options}"
                                Visibility="{Binding IsConfigurable, Converter={StaticResource BooleanToVisibilityConverter}}"
                                Command="{Binding DataContext.ConfigureFilterCommand, ElementName=userControl}"
                                CommandParameter="{Binding Mode=OneWay}" Margin="0" Padding="0">
                                        <Image Source="{StaticResource configureIcon}" Height="16" Margin="0" />
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>

            </TabItem>
            <TabItem x:Name="Tab2" Header="Sounds" DockPanel.Dock="Left" Background="{DynamicResource ButtonBorderBrush}" Foreground="#FFCCCCCC" Margin="39,0,-39,0" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="84">
                <Grid Margin="0,0,0,-4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100*" MinWidth="99"/>
                    </Grid.ColumnDefinitions>
                    <TreeView x:Name="treeView" ItemsSource="{Binding Items}" Height="Auto" Width="Auto" MinWidth="99" Margin="0,0,0,4">
                        <i:Interaction.Behaviors>
                            <misc1:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
                        </i:Interaction.Behaviors>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                <ContentControl>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding Image}" Stretch="Uniform" Margin="0,0,5,0"
                                    Visibility="{Binding IsCategory, Converter={StaticResource InvertAndVisibilitate}}" />
                                        <TextBlock Text="{Binding}" Foreground="{DynamicResource ThemeForegroundBrush}"
                                    ToolTip="{Binding Tooltip}" />
                                    </StackPanel>
                                </ContentControl>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </Grid>
            </TabItem>

            

        </TabControl>
    </Grid>
</UserControl>